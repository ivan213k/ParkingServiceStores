@page "/EditCar/{Id:int}";
@inject NavigationManager NavigationManager;
@inject IMapper mapper; 
@inject IRepository<Car> CarRepository; 
<AuthorizeView>
    <Authorized Context="Auth">
        <h3>Edit Information About Car</h3>
        @if (carDto == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <div class="text-left">
                <EditForm Model="@carDto" OnValidSubmit="@OnFormSubmit">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        <label for="inputCarModel">Car Model</label>
                        <InputText @bind-Value="carDto.Model" class="form-control" id="inputCarModel" placeholder="Enter car model"/>
                    </div>
                    <div class="form-group">
                        <label for="inputPlateNumber">Plate Number</label>
                        <InputText @bind-Value="carDto.PlateNumber" class="form-control" id="inputPlateNumber" placeholder="Enter plate number"/>
                    </div>
                    <div class="form-group">
                        <label for="inputCarColor">Car Color</label>
                        <InputText @bind-Value="carDto.Color" class="form-control" id="inputCarColor" placeholder="Enter car color"/>
                    </div>
                    <div class="form-group">
                        <label for="inputOwnerName">Owner's name</label>
                        <InputText @bind-Value="carDto.OwnerName" class="form-control" id="inputOwnerName" placeholder="Enter owner's name"/>
                    </div>
                    <div class="form-group">
                        <label for="inputOwnerPhone">Owner's phone number</label>
                        <InputText @bind-Value="carDto.OwnerPhoneNumber" class="form-control" id="inputOwnerPhone" placeholder="Enter owner's phone"/>
                    </div>
                    <ValidationSummary />
                    <button class="btn btn-primary">Save </button>
                </EditForm>
            </div>
        }
    </Authorized>
    <NotAuthorized>
        <NotAuthorizedMessage/>
    </NotAuthorized>
</AuthorizeView>

@code
{
    [Parameter]
    public int Id { get; set; }

    private Car car;
    private CarDto carDto;
    protected override async Task OnInitializedAsync()
    {
        car = await CarRepository.GetByIdAsync(Id);
        carDto = mapper.Map<Car, CarDto>(car);
    }

    private async void OnFormSubmit()
    {
        mapper.Map<CarDto, Car>(carDto, car);
        await CarRepository.UpdateAsync(car);

        NavigationManager.NavigateTo("/cars");
    }
}
