@page "/AddCar"
@inject ApplicationDbContext dbContext;
@inject NavigationManager NavigationManager;
@inject IMapper mapper;
<AuthorizeView>
    <Authorized Context="Auth">
        <h3>Add Car Page</h3>
        <div class="text-left">
            <EditForm Model="@carDto" OnValidSubmit="@OnFormSubmit">
                <DataAnnotationsValidator />
                <div class="form-group">
                    <label for="inputCarModel">Car Model</label>
                    <InputText id="inputCarModel" @bind-Value="carDto.Model" class="form-control" placeholder="Enter car model" />
                </div>
                <div class="form-group">
                    <label for="inputPlateNumber">Plate Number</label>
                    <InputText @bind-Value="carDto.PlateNumber" class="form-control" id="inputPlateNumber" placeholder="Enter plate number" />
                </div>
                <div class="form-group">
                    <label for="inputCarColor">Car Color</label>
                    <InputText @bind-Value="carDto.Color" class="form-control" id="inputCarColor" placeholder="Enter car color" />
                </div>
                <div class="form-group">
                    <label for="inputOwnerName">Owner's name</label>
                    <InputText @bind-Value="carDto.OwnerName" class="form-control" id="inputOwnerName" placeholder="Enter owner's name" />
                </div>
                <div class="form-group">
                    <label for="inputOwnerPhone">Owner's phone number</label>
                    <InputText @bind-Value="carDto.OwnerPhoneNumber" class="form-control" id="inputOwnerPhone" placeholder="Enter owner's phone" />
                </div>
                <ValidationSummary />
                <button class="btn btn-primary">Add car</button>
            </EditForm>
        </div>
    </Authorized>
    <NotAuthorized>
        <NotAuthorizedMessage />
    </NotAuthorized>
</AuthorizeView>

@code {
    private CarDto carDto = new CarDto();

    private async void OnFormSubmit()
    {
        Car car = mapper.Map<CarDto, Car>(carDto);

        await dbContext.Cars.AddAsync(car);

        await dbContext.SaveChangesAsync();
        NavigationManager.NavigateTo("/cars");
    }
}
