@page "/addPrice";
@inject IRepository<Price> PriceRepository;
@inject NavigationManager NavigationManager;
<AuthorizeView>
    <Authorized Context="Auth">
        <h3>Add new price form</h3>
        <div class="text-left">
            <EditForm Model="price" OnValidSubmit="OnFormSubmit">
                <FluentValidationValidator />
                <div class="form-group">
                    <label for="inputOneDayPrice">One day price</label>
                    <InputNumber @bind-Value="price.OneDayPrice" class="form-control" id="inputOneDayPrice" placeholder="Enter one day price"/>
                    <ValidationMessage For="@(()=>price.OneDayPrice)"/>
                </div>
                <div class="form-group">
                    <label for="inputOneHourPrice">One hour price</label>
                    <InputNumber @bind-Value="price.OneHourPrice" class="form-control" id="inputOneHourPrice" placeholder="Enter one hour price" />
                    <ValidationMessage For="@(()=>price.OneHourPrice)" />
                </div>
                <div class="form-group">
                    <label for="inputDate">Date</label>
                    <InputDate @bind-Value="price.Date" class="form-control" id="inputDate" placeholder="Enter Date" />
                    <ValidationMessage For="@(()=>price.Date)" />
                </div>
                <button class="btn btn-primary">Add new price</button>
            </EditForm>
        </div>
    </Authorized>
    <NotAuthorized>
        <NotAuthorizedMessage/>
    </NotAuthorized>
</AuthorizeView>

@code {
    private Price price = new Price();
    public AddPrice()
    {
        price.Date = DateTime.Now;
    }
    private async void OnFormSubmit()
    {
        await PriceRepository.AddAsync(price);
        NavigationManager.NavigateTo("/prices");
    }
}
